name: Sledger Web CI
on:
  push:
    branches:
      - release
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '12'
    - uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Derive tag from package.json version
      run: |
        export PACKAGE_VERSION=`sed -n 's/\s\+"version": "\([0-9.]\+\)",/\1/p' package.json`
        export TIMESTAMP=`TZ=Asia/Singapore date +'%m%d-%H%M'`
        echo "VERSION_TAG=$PACKAGE_VERSION-$TIMESTAMP" >> $GITHUB_ENV
    - name: Set environment file
      run: printf "SKIP_PREFLIGHT_CHECK=true\nBROWSER=NONE\nREACT_APP_VERSION=${{ env.VERSION_TAG }}\nREACT_APP_BASE_URL=${{ SECRETS.BASE_URL }}" > .env
    - run: npm ci
    - run: npm run build --if-present
    - uses: actions/upload-artifact@v1
      with:
        name: build
        path: build
  release:
    runs-on: self-hosted
    needs: build
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v1
      with:
        name: build
        path: build
    - name: Derive tag from package.json version
      run: |
        export PACKAGE_VERSION=`sed -n 's/\s\+"version": "\([0-9.]\+\)",/\1/p' package.json`
        export TIMESTAMP=`date +'%Y%m%d%H%M'`
        echo "IMAGE_NAME=${{ SECRETS.IMAGE_NAME }}:$PACKAGE_VERSION-$TIMESTAMP" >> $GITHUB_ENV
    - name: Build Docker image
      run: docker build -t ${{ env.IMAGE_NAME }} .
    - name: Push Docker image
      run: docker push ${{ env.IMAGE_NAME }}
    - name: Perform rolling update
      run: |
        kubectl set image deployments/${{ SECRETS.DEPLOYMENT_NAME }} ${{SECRETS.DEPLOYMENT_NAME }}=${{ env.IMAGE_NAME }}
        kubectl rollout status deployment/${{ SECRETS.DEPLOYMENT_NAME }}
